#!/opt/common/CentOS_6-dev/python/python-2.7.10/bin/python

import argparse, os, sys 
import cmo

#FIXME this SHOULD NOT take pairing file as input in long term
#first version is for pipeline parity
#this method doesnt even get called? what kinda crackerjack operation am I running here
def main(qc_version, r_version, metrics_dir, pre):
    script = os.path.join(qc_version, "qcPDF.R")
    Rscript = os.path.join(r_version, "R")
    cmd = [ Rscript, "CMD BATCH", '"--args',
            "path='%s'"% metrics_dir,
            "pre='%s'" % pre,
            "bin='%s'"% qc_version,
            "logfile='%s'" % os.path.join(metrics_dir, "_QCPDF_ERRORS.log"),
            '"',
            script
            ]
    print " ".join(cmd)
    cmo.util.call_cmd(" ".join(cmd))



if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    #FIXME
    #ccharris 10-30-2017
    #this is cumbersome, that it doesn't auto pull these from the layer below
    #if we aren't going to throw this codebase out completely soon, we should fix it
    #this is technical debt left over from rushing for 93017
    parser.add_argument("--globdir", required=True)
    parser.add_argument("--gcbias-files", )
    parser.add_argument("--mdmetrics-files")
    parser.add_argument("--insertsize-files")
    parser.add_argument("--hsmetrics-files")
    parser.add_argument("--qualmetrics-files")
    parser.add_argument("--fingerprint-files")
    parser.add_argument("--trimgalore-files")
    parser.add_argument("--file-prefix", required=True)
    parser.add_argument("--fp-genotypes", required=True)
    parser.add_argument("--pairing-file", required=True)
    parser.add_argument("--grouping-file", required=True)
    parser.add_argument("--request-file", required=True)
    parser.add_argument("--minor-contam-threshold",type=float, default=".02")
    parser.add_argument("--major-contam-threshold",type=float,  default=".55")
    parser.add_argument("--duplication-threshold", type=int, default="50")
    parser.add_argument("--cov-warn-threshold", type=int, default="50")
    parser.add_argument("--cov-fail-threshold", type=int, default="25")

    parser.add_argument("--version", default="0.5.8", choices=cmo.util.programs['roslin-qc'].keys())
    args = parser.parse_args()
#    script = os.path.join(cmo.util.programs['roslin-qc'][args.version], "generate_pdf.py")
    cmd= [cmo.util.programs['roslin-qc'][args.version]]
#    cmd = [script]
    
    for arg, value in vars(args).items():
        if arg == 'version':
            continue
        cmd = cmd + ["--" + arg.replace("_","-")]
        if isinstance(value, list):
            cmd = cmd +  value
        else:
            cmd = cmd + [value]
    try:
        cmo.util.call_cmd(" ".join(cmd))
    except:
        #don't kill the pipeline if we died bc qc can be rerun later
        print >>sys.stderr, "QC PDF Fail but continue anyway" 
        sys.exit(0)

        
        
        



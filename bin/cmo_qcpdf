#!/opt/common/CentOS_6-dev/python/python-2.7.10/bin/python

import argparse, os, sys 
import cmo

#FIXME this SHOULD NOT take pairing file as input in long term
#first version is for pipeline parity
def main(qc_version, r_version, metrics_dir, pre):
    script = os.path.join(qc_version, "qcPDF.R")
    Rscript = os.path.join(r_version, "R")
    cmd = [ Rscript, "CMD BATCH", '"--args',
            "path='%s'"% metrics_dir,
            "pre='%s'" % pre,
            "bin='%s'"% qc_version,
            "logfile='%s'" % os.path.join(metrics_dir, "_QCPDF_ERRORS.log"),
            '"',
            script
            ]
    print " ".join(cmd)
    cmo.util.call_cmd(" ".join(cmd))



if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--globdir", required=True)
    parser.add_argument("--gcbias-files", required=True, nargs="+")
    parser.add_argument("--mdmetrics-files", required=True, nargs='+')
    parser.add_argument("--insertsize-files", required=True, nargs='+')
    parser.add_argument("--hsmetrics-files", required=True, nargs='+')
    parser.add_argument("--qualmetrics-files", required=True, nargs='+')
    parser.add_argument("--fingerprint-files", required=True, nargs='+')
    parser.add_argument("--trimgalore-files", required=True, nargs='+')
    parser.add_argument("--file-prefix", required=True)
    parser.add_argument("--fp-genotypes", required=True)
    parser.add_argument("--pairing-file", required=True)
    parser.add_argument("--grouping-file", required=True)
    parser.add_argument("--request-file", required=True)
    parser.add_argument("--version", default="0.5.5", choices=cmo.util.programs['roslin-qc'].keys())
    args = parser.parse_args()
#    script = os.path.join(cmo.util.programs['roslin-qc'][args.version], "generate_pdf.py")
    cmd= [cmo.util.programs['roslin-qc'][args.version]]
#    cmd = [script]
    for arg, value in vars(args).items():
        cmd = cmd + ["--" + arg.replace("_","-")]
        if isinstance(value, list):
            cmd = cmd +  value
        else:
            cmd = cmd + [value]
    cmo.util.call_cmd(" ".join(cmd))

        
        
        


